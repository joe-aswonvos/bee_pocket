from django.db import models

# Create your models here.

"""
This is the model for the admin_app. It contains the following classes:
    - User (Authenticated by Allauth)
    - Account (managed be a super-user)
    - BeePocket (Many to one relationship with account)
    - User Permission (The account super-user can assign permissions for users to access the BeePocket)
"""

class User(models.Model):
    """
    This is the User model. It is authenticated by Allauth.
    Each user has a uniqueID assigned by Django and the following attributes
        - Username
        - email
        - A user icon/avatar saved to cloudinary and with a link saved in the database
    """
    username = models.CharField(max_length=50)
    email = models.EmailField(max_length=50)
    user_icon = models.URLField(max_length=200)

    def __str__(self):
        return self.username
    
class Account(models.Model):
    """
    This is the Account model. It is managed by a super-user.
    Each account has a uniqueID assigned by Django and the following attributes:
        - Account name - Charfield (50 characters)
        - Account type (choices: 'Free', 'Subscribed')
        - Creation date (auto-generated by Django)
        - Active Status (boolean)    
        - Account owner (Foreign key to User)
    """
    ACCOUNT_TYPE = (
        ('Free', 'Free'),
        ('Subscribed', 'Subscribed')
    )
    account_name = models.CharField(max_length=50)
    account_type = models.CharField(max_length=10, choices=ACCOUNT_TYPE)
    creation_date = models.DateTimeField(auto_now_add=True)
    active_status = models.BooleanField(default=True)
    account_owner = models.ForeignKey(User, on_delete=models.CASCADE)

    def __str__(self):
        return self.account_name
    
class BeePocket(models.Model):
    """
    This is the BeePocket model. It is a many-to-one relationship with the Account model.
    Each BeePocket has a uniqueID assigned by Django and the following attributes:
        - BeePocket name - Charfield (50 characters)
        - Creation date (auto-generated by Django)
        - Account (Foreign key to Account)
        - Units (from a list of choices: non-currency, GBP, EUR, USD)
        - Starting balance (integer)
    """
    UNIT_CHOICES = (
        ('non-currency', 'non-currency'),
        ('GBP', 'GBP'),
        ('EUR', 'EUR'),
        ('USD', 'USD')
    )
    beepocket_name = models.CharField(max_length=50)
    creation_date = models.DateTimeField(auto_now_add=True)
    account = models.ForeignKey(Account, on_delete=models.CASCADE)
    units = models.CharField(max_length=10, choices=UNIT_CHOICES)
    starting_balance = models.IntegerField()

    def __str__(self):
        return self.beepocket_name
    
class UserPermission(models.Model):
    """
    This is the UserPermission model. It is managed by a super-user.
    Each UserPermission has a uniqueID assigned by Django and the following attributes:
        - User (Foreign key to User)
        - Account (Foreign key to Account)
        - BeePocket (Foreign key to BeePocket)
        - Permission (choices: manager, user)
    """
    PERMISSION_CHOICES = (
        ('manager', 'manager'),
        ('user', 'user')
    )
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    account = models.ForeignKey(Account, on_delete=models.CASCADE)
    beepocket = models.ForeignKey(BeePocket, on_delete=models.CASCADE)
    permission = models.CharField(max_length=10, choices=PERMISSION_CHOICES)

    def __str__(self):
        return self.user.username